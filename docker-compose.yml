version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: ryu-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-475118582}
      TZ: Asia/Shanghai
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
      - ./docker/mysql/conf:/etc/mysql/conf.d
      - ./docker/mysql/logs:/var/log/mysql
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --performance-schema=OFF --table_definition_cache=400 --table_open_cache=256 --innodb_buffer_pool_size=128M
    networks:
      - ryu-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-475118582}"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 384M
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000

  # Redis缓存
  redis:
    image: redis:7.0-alpine
    container_name: ryu-redis
    restart: unless-stopped
    volumes:
      - ./docker/redis/data:/data
      - ./docker/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
      - ./docker/redis/logs:/var/log/redis
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - ryu-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000

  # 后端应用服务
  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - JAVA_VERSION=${JAVA_VERSION:-17}
    container_name: ryu-api
    restart: unless-stopped
    depends_on:
      - mysql
      - redis
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-prod}
      - SPRING_R2DBC_URL=r2dbc:mysql://mysql:3306/${MYSQL_DATABASE:-ryu_blog}?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai
      - SPRING_R2DBC_USERNAME=root
      - SPRING_R2DBC_PASSWORD=${MYSQL_ROOT_PASSWORD:-475118582}
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATA_REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - SERVER_PORT=${API_PORT:-5300}
      - UPLOAD_PATH=/data/uploads
      - SA_TOKEN_JWT_SECRET=${JWT_SECRET:-abcdefghijklmnopqrstuvwxyz1234567890}
      - JAVA_OPTS=-Xms256m -Xmx512m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=256m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/app/logs/heapdump.hprof
    volumes:
      - ./docker/api/uploads:/data/uploads
      - ./docker/api/logs:/app/logs
      - ./docker/api/config:/app/config
    ports:
      - "${API_PORT:-5300}:${API_PORT:-5300}"
    networks:
      - ryu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${API_PORT:-5300}/actuator/health"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '0.8'
          memory: 512M
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000

  # 前端服务
  web:
    image: nginx:1.23-alpine
    container_name: ryu-web
    restart: unless-stopped
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
      - ./docker/nginx/conf/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/logs:/var/log/nginx
      - ./docker/nginx/cache:/var/cache/nginx
      - ./docker/api/uploads:/usr/share/nginx/html/uploads
    ports:
      - "${WEB_PORT:-80}:80"
    networks:
      - ryu-network
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 64M
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000

networks:
  ryu-network:
    driver: bridge 